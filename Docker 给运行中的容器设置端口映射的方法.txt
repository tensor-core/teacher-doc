一、概念

Docker 端口映射即映射容器内应用的服务端口到本机宿主机器。

二、实现
当容器中运行一些网络应用，要让外部访问这些应用时，可以通过 -P 或 -p 参数两种方式来指定端口映射。

1. 随机映射

使用 -P 参数时，Docker 会随机映射一个端口到内部容器开放的网络端口，如下开启一个 nginx 服务：
$ docker run -d -P nginx
e93349d539119dc48dc841e117f6388d6afa6a6065b75a5b4aedaf5fb2a051fc
$ docker ps
CONTAINER ID    IMAGE        COMMAND         CREATED       STATUS       PORTS          NAMES
e93349d53911    nginx        "nginx -g 'daemon ..."  11 seconds ago   Up 9 seconds    0.0.0.0:32769->80/tcp  zen_kirch
使用 docker ps 看到，本地主机的 32769 端口被映射到了容器的 80 端口，这时我们通过本机浏览器访问 http://localhost:32769 就会出现 nginx 欢迎页面。

2. 指定端口

使用 -p 参数时，可以指定要映射的端口，并且在一个指定的端口上只可以绑定一个容器。支持的格式有：

IP:HostPort:ContainerPort
IP:ContainerPort
HostPort:ContainerPort
下面开启一个 nginx 服务，将本机 8080 端口映射到容器的 80 端口：

$ docker run -d -p 8080:80 nginx
23e725098712d061a1382f33d6fe54da23ae37597a62f8debdd3731b5f9cc4b9
$ docker ps
CONTAINER ID    IMAGE        COMMAND         CREATED       STATUS       PORTS          NAMES
23e725098712    nginx        "nginx -g 'daemon ..."  8 seconds ago    Up 6 seconds    0.0.0.0:8080->80/tcp  frosty_ptolemy
使用 docker ps 看到，本地主机的 8080 端口被映射到了容器的 80 端口，这时我们通过本机浏览器访问 http://localhost:8080 就会出现 nginx 欢迎页面。

三、查看映射端口

使用 docker port 命令来查看当前映射的端口配置，也可以查看到绑定的地址。命令格式如下：
$ docker port CONTAINER [PRIVATE_PORT[/PROTO]]
容器有自己的内部网络和 IP 地址，可以使用 docker inspect + 容器ID 获取容器的具体信息。

DOCKER 给运行中的容器添加映射端口

方法1
1、获得容器IP
将container_name 换成实际环境中的容器名
docker inspect `container_name` | grep IPAddress
2、 iptable转发端口

将容器的8000端口映射到docker主机的8001端口
复制代码代码如下:

iptables -t nat -A  DOCKER -p tcp --dport 8001 -j DNAT --to-destination 172.17.0.19:8000
方法2
1.提交一个运行中的容器为镜像
docker commit containerid foo/live
2.运行镜像并添加端口
docker run -d -p 8000:80 foo/live /bin/bash

#================================================================================================================
Docker容器动态添加端口
转载weixin_34192732 发布于2019-05-23 05:14:32 阅读数 307  收藏
展开


突然遇到一个问题怎么给一个已经在运行的docker容器添加端口，找了找资料，记个笔记。

参考：

怎么给运行中的docker容器添加新的端口
修改docker容器端口映射的方法
iptable规则查看，添加，删除和修改
方法1 修改iptables端口映射
docker的端口映射并不是在docker技术中实现的，而是通过宿主机的iptables来实现。通过控制网桥来做端口映射，类似路由器中设置路由端口映射。
比如我们有一个容器的80端口映射到主机的8080端口，先查看iptables到底设置了什么规则：

sudo iptables -t nat -vnL复制代码
在结果中有一条：

Chain DOCKER
target     prot opt source               destination
RETURN     all  --  0.0.0.0/0            0.0.0.0/0
DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.17.0.3:80复制代码
我们可以看到docker创建了一个名为DOKCER的自定义的链条Chain。而我开放80端口的容器的ip是172.17.0.3

也可以通过inspect命令查看容器ip:

docker inspect containerId |grep IPAddress复制代码
我们想再增加一个端口映射，比如8081->81，就在这个链条是再加一条规则：

sudo iptables -t nat -A  DOCKER -p tcp --dport 8081 -j DNAT --to-destination 172.17.0.3:81复制代码
如果加错了或者想修改：

先显示行号查看

sudo iptables -t nat -vnL DOCKER --line-number复制代码
删除规则3

sudo iptables -t nat -D DOCKER 3复制代码
方法2 修改容器配置文件
容器的配置文件/var/lib/docker/containers/[containerId]目录下，hostconfig.json和config.v2.json 修改好之后，重启容器服务。

方法3 把运行中的容器生成新的镜像，然后运行新的镜像
提交一个运行中的容器为镜像
docker commit containerid heropoo/example复制代码
2.运行heropoo/example镜像并添加8080映射容器80端口

docker run -d -p 8000:80  heropoo/example /bin/sh复制代码
